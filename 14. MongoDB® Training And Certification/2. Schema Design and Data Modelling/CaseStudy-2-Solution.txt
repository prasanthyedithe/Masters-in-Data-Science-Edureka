Business RequirementYou are provided with various attributes of a TV Shows. You are working for “TMDB” which stores all TVshows’data. Basically, data contains its name, producer, director, creation date, seasons, episodes, crew, and casts.

TV Show contains ->
1.Show details
2.Seasons (Many)
3.Episodes (Many)
4.Reviews (Many)
5.Cast and Crew (Many)

Each show has many seasons, each season has many episodes, and each episode has many reviews and many cast members. When users come into this site, typically they go directly to the page for a particular TV show. On that page, they see all the seasons and all the episodes and all the reviews and all the cast members from that show, all on one page. So, from the application perspective, when the user visits a page, we want to retrieve all of the information connected to that TV show.You mustchoosethebest possible database for the above data so that reads and writes can be faster.

Considerations

You have been given various attributes of a TV shows.

Additional Information

If we model correctly,then we will be able to get the data in one hit. If you check IMDB, there you will find all the details on a single page. Response time will be less.Approach to Solve
•List the advantages and disadvantages of both the plans and select one plan to implement
•Choose a data model after analyzing the source files provided to you with this case study 
•Select appropriate data model and create your personalized server
•Create collections in your database
•Insert records in each collection


Model : 
{
	"_id" : 1000,
	"ShowDetails": "SD1",
	"Seasons":
	[
		"season_id":1,
		"episodes": 
			[
				"episode_id":1,
				"episode_data":"data",
				"reviewes":
					[
						{"reviewe-1",""reviewe-2",........}
					],
				"CastAndCrew":
					[
						{"member-1","member-2"......}
					]
			]
	]
}

Collection : TMDB
Database:TVShows
